//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.03.01 at 12:36:44 PM CET 
//


package io.github.agroportal.ncboproxy.servlet.handlers.omtdsharemeta.xsdmodel;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for conformanceToStandardsBestPractices.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="conformanceToStandardsBestPractices">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;maxLength value="100"/>
 *     &lt;enumeration value="AgroVoc"/>
 *     &lt;enumeration value="ALVIS"/>
 *     &lt;enumeration value="ARGO"/>
 *     &lt;enumeration value="BML"/>
 *     &lt;enumeration value="CES"/>
 *     &lt;enumeration value="DKPro_Core"/>
 *     &lt;enumeration value="EAGLES"/>
 *     &lt;enumeration value="EDAMontology"/>
 *     &lt;enumeration value="ELSST"/>
 *     &lt;enumeration value="EML"/>
 *     &lt;enumeration value="EMMA"/>
 *     &lt;enumeration value="GATE"/>
 *     &lt;enumeration value="GESIS"/>
 *     &lt;enumeration value="GMX"/>
 *     &lt;enumeration value="GrAF"/>
 *     &lt;enumeration value="HamNoSys"/>
 *     &lt;enumeration value="HASSET"/>
 *     &lt;enumeration value="InkML"/>
 *     &lt;enumeration value="ILSP_NLP"/>
 *     &lt;enumeration value="ISO12620"/>
 *     &lt;enumeration value="ISO16642"/>
 *     &lt;enumeration value="ISO1987"/>
 *     &lt;enumeration value="ISO26162"/>
 *     &lt;enumeration value="ISO30042"/>
 *     &lt;enumeration value="ISO704"/>
 *     &lt;enumeration value="JATS"/>
 *     &lt;enumeration value="LAF"/>
 *     &lt;enumeration value="LAPPS"/>
 *     &lt;enumeration value="Lemon"/>
 *     &lt;enumeration value="LMF"/>
 *     &lt;enumeration value="MAF"/>
 *     &lt;enumeration value="MLIF"/>
 *     &lt;enumeration value="MOSES"/>
 *     &lt;enumeration value="MULTEXT"/>
 *     &lt;enumeration value="MUMIN"/>
 *     &lt;enumeration value="multimodalInteractionFramework"/>
 *     &lt;enumeration value="OAXAL"/>
 *     &lt;enumeration value="OLIA"/>
 *     &lt;enumeration value="OWL"/>
 *     &lt;enumeration value="PANACEA"/>
 *     &lt;enumeration value="pennTreeBank"/>
 *     &lt;enumeration value="pragueTreebank"/>
 *     &lt;enumeration value="RDF"/>
 *     &lt;enumeration value="SemAF"/>
 *     &lt;enumeration value="SemAF_DA"/>
 *     &lt;enumeration value="SemAF_NE"/>
 *     &lt;enumeration value="SemAF_SRL"/>
 *     &lt;enumeration value="SemAF_DS"/>
 *     &lt;enumeration value="SKOS"/>
 *     &lt;enumeration value="SRX"/>
 *     &lt;enumeration value="SynAF"/>
 *     &lt;enumeration value="TBX"/>
 *     &lt;enumeration value="TMX"/>
 *     &lt;enumeration value="TEI"/>
 *     &lt;enumeration value="TEI_P3"/>
 *     &lt;enumeration value="TEI_P4"/>
 *     &lt;enumeration value="TEI_P5"/>
 *     &lt;enumeration value="TimeML"/>
 *     &lt;enumeration value="XCES"/>
 *     &lt;enumeration value="XLIFF"/>
 *     &lt;enumeration value="UD"/>
 *     &lt;enumeration value="WordNet"/>
 *     &lt;enumeration value="other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "conformanceToStandardsBestPractices")
@XmlEnum
public enum ConformanceToStandardsBestPractices {

    @XmlEnumValue("AgroVoc")
    AGRO_VOC("AgroVoc"),
    ALVIS("ALVIS"),
    ARGO("ARGO"),
    BML("BML"),
    CES("CES"),
    @XmlEnumValue("DKPro_Core")
    DK_PRO_CORE("DKPro_Core"),
    EAGLES("EAGLES"),
    @XmlEnumValue("EDAMontology")
    EDA_MONTOLOGY("EDAMontology"),
    ELSST("ELSST"),
    EML("EML"),
    EMMA("EMMA"),
    GATE("GATE"),
    GESIS("GESIS"),
    GMX("GMX"),
    @XmlEnumValue("GrAF")
    GR_AF("GrAF"),
    @XmlEnumValue("HamNoSys")
    HAM_NO_SYS("HamNoSys"),
    HASSET("HASSET"),
    @XmlEnumValue("InkML")
    INK_ML("InkML"),
    ILSP_NLP("ILSP_NLP"),
    @XmlEnumValue("ISO12620")
    ISO_12620("ISO12620"),
    @XmlEnumValue("ISO16642")
    ISO_16642("ISO16642"),
    @XmlEnumValue("ISO1987")
    ISO_1987("ISO1987"),
    @XmlEnumValue("ISO26162")
    ISO_26162("ISO26162"),
    @XmlEnumValue("ISO30042")
    ISO_30042("ISO30042"),
    @XmlEnumValue("ISO704")
    ISO_704("ISO704"),
    JATS("JATS"),
    LAF("LAF"),
    LAPPS("LAPPS"),
    @XmlEnumValue("Lemon")
    LEMON("Lemon"),
    LMF("LMF"),
    MAF("MAF"),
    MLIF("MLIF"),
    MOSES("MOSES"),
    MULTEXT("MULTEXT"),
    MUMIN("MUMIN"),
    @XmlEnumValue("multimodalInteractionFramework")
    MULTIMODAL_INTERACTION_FRAMEWORK("multimodalInteractionFramework"),
    OAXAL("OAXAL"),
    OLIA("OLIA"),
    OWL("OWL"),
    PANACEA("PANACEA"),
    @XmlEnumValue("pennTreeBank")
    PENN_TREE_BANK("pennTreeBank"),
    @XmlEnumValue("pragueTreebank")
    PRAGUE_TREEBANK("pragueTreebank"),
    RDF("RDF"),
    @XmlEnumValue("SemAF")
    SEM_AF("SemAF"),
    @XmlEnumValue("SemAF_DA")
    SEM_AF_DA("SemAF_DA"),
    @XmlEnumValue("SemAF_NE")
    SEM_AF_NE("SemAF_NE"),
    @XmlEnumValue("SemAF_SRL")
    SEM_AF_SRL("SemAF_SRL"),
    @XmlEnumValue("SemAF_DS")
    SEM_AF_DS("SemAF_DS"),
    SKOS("SKOS"),
    SRX("SRX"),
    @XmlEnumValue("SynAF")
    SYN_AF("SynAF"),
    TBX("TBX"),
    TMX("TMX"),
    TEI("TEI"),
    @XmlEnumValue("TEI_P3")
    TEI_P_3("TEI_P3"),
    @XmlEnumValue("TEI_P4")
    TEI_P_4("TEI_P4"),
    @XmlEnumValue("TEI_P5")
    TEI_P_5("TEI_P5"),
    @XmlEnumValue("TimeML")
    TIME_ML("TimeML"),
    XCES("XCES"),
    XLIFF("XLIFF"),
    UD("UD"),
    @XmlEnumValue("WordNet")
    WORD_NET("WordNet"),
    @XmlEnumValue("other")
    OTHER("other");
    private final String value;

    ConformanceToStandardsBestPractices(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ConformanceToStandardsBestPractices fromValue(String v) {
        for (ConformanceToStandardsBestPractices c: ConformanceToStandardsBestPractices.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
